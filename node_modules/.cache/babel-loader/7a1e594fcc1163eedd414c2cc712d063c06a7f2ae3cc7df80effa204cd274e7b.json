{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport router from '../router';\nimport { auth } from '../firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nexport default createStore({\n  state: {\n    user: null\n  },\n  getters: {},\n  mutations: {\n    SET_USER(state, user) {\n      state.user = user;\n    },\n    CLEAR_USER(state) {\n      state.user = null;\n    }\n  },\n  actions: {\n    async login({\n      commit\n    }, details) {\n      const {\n        email,\n        password\n      } = details;\n      try {\n        await signInWithEmailAndPassword(auth, email, password);\n      } catch (error) {\n        switch (error.code) {\n          case 'auth/user-not-found':\n            alert(\"User not found\");\n            break;\n          case 'auth/wrong-password':\n            alert(\"Wrong Password\");\n            break;\n          default:\n            alert(\"Something went wrong\");\n        }\n        return;\n      }\n      commit('SET_USER', auth.currentUser);\n      router.push('/');\n    },\n    async register({\n      commit\n    }, details) {\n      //\n    },\n    async logout({\n      commit\n    }) {\n      //\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","router","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","state","user","getters","mutations","SET_USER","CLEAR_USER","actions","login","commit","details","email","password","error","code","alert","currentUser","push","register","logout","modules"],"sources":["/Users/abhinavkumar/vue_auth/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport router from '../router'\nimport {auth} from '../firebase'\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut\n} from 'firebase/auth'\nexport default createStore({\n  state: {\n    user: null\n  },\n  getters: {\n  },\n  mutations: {\n    SET_USER (state, user) {\n      state.user = user\n    },\n    CLEAR_USER (state) {\n      state.user = null\n    }\n  },\n  actions: {\n    async login ({commit}, details){\n      const {email, password} = details\n      try{\n        await signInWithEmailAndPassword(auth, email, password)\n      } catch(error) {\n        switch(error.code){\n          case 'auth/user-not-found':\n            alert(\"User not found\")\n            break\n          case 'auth/wrong-password':\n            alert(\"Wrong Password\")\n            break\n          default:\n            alert(\"Something went wrong\")\n        }\n        return\n      }\n      commit('SET_USER', auth.currentUser)\n      router.push('/')\n    },\n    async register ({commit}, details) {\n      //\n    },\n    async logout ({commit}) {\n      //\n    },\n  },\n  modules: {\n  }\n})\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAAQC,IAAI,QAAO,aAAa;AAChC,SACEC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,QACF,eAAe;AACtB,eAAeL,WAAW,CAAC;EACzBM,KAAK,EAAE;IACLC,IAAI,EAAE;EACR,CAAC;EACDC,OAAO,EAAE,CACT,CAAC;EACDC,SAAS,EAAE;IACTC,QAAQA,CAAEJ,KAAK,EAAEC,IAAI,EAAE;MACrBD,KAAK,CAACC,IAAI,GAAGA,IAAI;IACnB,CAAC;IACDI,UAAUA,CAAEL,KAAK,EAAE;MACjBA,KAAK,CAACC,IAAI,GAAG,IAAI;IACnB;EACF,CAAC;EACDK,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAE;MAACC;IAAM,CAAC,EAAEC,OAAO,EAAC;MAC7B,MAAM;QAACC,KAAK;QAAEC;MAAQ,CAAC,GAAGF,OAAO;MACjC,IAAG;QACD,MAAMX,0BAA0B,CAACF,IAAI,EAAEc,KAAK,EAAEC,QAAQ,CAAC;MACzD,CAAC,CAAC,OAAMC,KAAK,EAAE;QACb,QAAOA,KAAK,CAACC,IAAI;UACf,KAAK,qBAAqB;YACxBC,KAAK,CAAC,gBAAgB,CAAC;YACvB;UACF,KAAK,qBAAqB;YACxBA,KAAK,CAAC,gBAAgB,CAAC;YACvB;UACF;YACEA,KAAK,CAAC,sBAAsB,CAAC;QAAA;QAEjC;MACF;MACAN,MAAM,CAAC,UAAU,EAAEZ,IAAI,CAACmB,WAAW,CAAC;MACpCpB,MAAM,CAACqB,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IACD,MAAMC,QAAQA,CAAE;MAACT;IAAM,CAAC,EAAEC,OAAO,EAAE;MACjC;IAAA,CACD;IACD,MAAMS,MAAMA,CAAE;MAACV;IAAM,CAAC,EAAE;MACtB;IAAA;EAEJ,CAAC;EACDW,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}